import Dependencies._

ThisBuild / organization := "io.conduktor"
ThisBuild / scalaVersion := "2.13.6"

Global / onChangedBuildSource := ReloadOnSourceChanges
Global / cancelable := true
run / fork := true
run / javaOptions += "-Dconfig.file=src/main/resources/application-dev.conf"

lazy val root = project
  .in(file("."))
  .enablePlugins(DockerPlugin, JlinkPlugin, BuildInfoPlugin)
  .configs(IntegrationTest)
  .settings(
    name := "backend",
    scalacOptions ++= Seq("-Ymacro-annotations", "-Wconf:src=twirl/.*:s,msg=\\$implicit\\$:s,any:wv"),
    Defaults.itSettings,
    ThisBuild / scalaVersion := "2.13.6",
    libraryDependencies ++= Seq(
      "org.typelevel"         %% "cats-core"                         % catsVersion,
      "org.typelevel"         %% "cats-effect"                       % catsEffectVersion,
      "org.typelevel"         %% "cats-tagless-macros"               % catsTaglessVersion,
      "org.typelevel"         %% "mouse"                             % mouseVersion,
      "co.fs2"                %% "fs2-core"                          % fs2Version,
      "co.fs2"                %% "fs2-io"                            % fs2Version,
      "com.github.ghostdogpr" %% "caliban"                           % calibanVersion,
      "com.github.ghostdogpr" %% "caliban-http4s"                    % calibanVersion,
      "com.github.ghostdogpr" %% "caliban-cats"                      % calibanVersion,
      "com.beachape"          %% "enumeratum"                        % enumeratumVersion,
      "com.beachape"          %% "enumeratum-circe"                  % enumeratumVersion,
      "com.beachape"          %% "enumeratum-doobie"                 % enumeratumDoobieVersion,
      "org.tpolecat"          %% "doobie-core"                       % doobieVersion,
      "org.tpolecat"          %% "doobie-postgres-circe"             % doobieVersion,
      "org.tpolecat"          %% "doobie-postgres"                   % doobieVersion,
      "org.tpolecat"          %% "doobie-hikari"                     % doobieVersion,
      "org.tpolecat"          %% "doobie-refined"                    % doobieVersion,
      "org.http4s"            %% "http4s-core"                       % http4sVersion,
      "org.http4s"            %% "http4s-dsl"                        % http4sVersion,
      "org.http4s"            %% "http4s-blaze-server"               % http4sVersion,
      "org.http4s"            %% "http4s-circe"                      % http4sVersion,
      "org.http4s"            %% "http4s-jawn"                       % http4sVersion,
      "org.http4s"            %% "http4s-prometheus-metrics"         % http4sVersion,
      "io.circe"              %% "circe-core"                        % circeVersion,
      "io.circe"              %% "circe-optics"                      % circeVersion,
      "io.circe"              %% "circe-generic"                     % circeVersion,
      "io.circe"              %% "circe-parser"                      % circeVersion,
      "io.circe"              %% "circe-refined"                     % circeVersion,
      "com.github.pureconfig" %% "pureconfig"                        % pureconfigVersion,
      "com.github.pureconfig" %% "pureconfig-cats"                   % pureconfigVersion,
      "com.github.pureconfig" %% "pureconfig-cats-effect2"           % pureconfigVersion,
      "com.github.pureconfig" %% "pureconfig-cron4s"                 % pureconfigVersion,
      "com.github.pureconfig" %% "pureconfig-magnolia"               % pureconfigVersion,
      "eu.timepit"            %% "refined"                           % refinedVersion,
      "eu.timepit"            %% "refined-cats"                      % refinedVersion,
      "eu.timepit"            %% "refined-pureconfig"                % refinedVersion,
      "eu.timepit"            %% "refined-shapeless"                 % refinedVersion,
      "io.estatico"           %% "newtype"                           % newtypeVersion,
      "org.log4s"             %% "log4s"                             % log4sVersion,
      "tf.tofu"               %% "derevo-cats"                       % derevoVersion,
      "tf.tofu"               %% "derevo-cats-tagless"               % derevoVersion,
      "tf.tofu"               %% "derevo-circe"                      % derevoVersion,
      "tf.tofu"               %% "derevo-circe-magnolia"             % derevoVersion,
      "tf.tofu"               %% "derevo-pureconfig"                 % derevoVersion,
      "tf.tofu"               %% "tofu-core"                         % tofuVersion,
      "tf.tofu"               %% "tofu-derivation"                   % tofuVersion,
      "tf.tofu"               %% "tofu-logging"                      % tofuVersion,
      "tf.tofu"               %% "tofu-logging-refined"              % tofuVersion,
      "tf.tofu"               %% "tofu-optics-macro"                 % tofuVersion,
      "tf.tofu"               %% "tofu-zio-interop"                  % tofuVersion,
      "tf.tofu"               %% "tofu-zio-core"                     % tofuVersion,
      "tf.tofu"               %% "tofu-doobie"                       % tofuVersion,
      "tf.tofu"               %% "tofu-fs2-interop"                  % tofuVersion,
      "dev.zio"               %% "zio"                               % zioVersion,
      "dev.zio"               %% "zio-interop-cats"                  % zioInteropCatsVersion,
      "io.chrisdavenport"     %% "epimetheus"                        % epimetheusVersion,
      "io.prometheus"          % "simpleclient"                      % prometheusVersion,
      "org.flywaydb"           % "flyway-core"                       % flywayVersion,
      "ch.qos.logback"         % "logback-classic"                   % logbackVersion,
      "org.slf4j"              % "jul-to-slf4j"                      % slf4jVersion,
      "org.slf4j"              % "log4j-over-slf4j"                  % slf4jVersion,
      "org.slf4j"              % "jcl-over-slf4j"                    % slf4jVersion,
      "io.janstenpickle"      %% "trace4cats-core"                   % trace4catsVersion,
      "io.janstenpickle"      %% "trace4cats-inject"                 % trace4catsVersion,
      "io.janstenpickle"      %% "trace4cats-jaeger-thrift-exporter" % trace4catsVersion,
      "io.janstenpickle"      %% "trace4cats-http4s-server"          % trace4catsVersion,
      "io.scalaland"          %% "chimney"                           % chimneyVersion,
      "com.github.fd4s"       %% "fs2-kafka"                         % fs2KafkaVersion,
      "org.scalatest"         %% "scalatest"                         % scalatestVersion           % "it,test",
      "org.tpolecat"          %% "doobie-scalatest"                  % doobieVersion              % Test,
      "com.dimafeng"          %% "testcontainers-scala"              % testcontainersScalaVersion % "it,test",
      "org.testcontainers"     % "testcontainers"                    % testcontainersJavaVersion  % Test,
      "org.testcontainers"     % "postgresql"                        % testcontainersJavaVersion  % Test
    ),
    dependencyOverrides := Seq(
      "com.zaxxer" % "HikariCP" % hikariVersion
    ),
    dockerExposedPorts ++= Seq(8080),
    jlinkOptions ++= Seq(
      "--no-header-files",
      "--no-man-pages",
      "--compress=2"
    ),
    jlinkModules ++= Seq("jdk.crypto.ec", "jdk.unsupported", "jdk.internal.vm.ci"),
    jlinkIgnoreMissingDependency := JlinkIgnore.byPackagePrefix(
      "ch.qos.logback.classic"                                           -> "javax.servlet.http",
      "ch.qos.logback"                                                   -> "javax",
      "ch.qos.logback.classic"                                           -> "groovy.lang",
      "ch.qos.logback.classic"                                           -> "org.codehaus.groovy",
      "ch.qos.logback.core.boolex"                                       -> "org.codehaus.janino",
      "ch.qos.logback.core.joran.conditional"                            -> "org.codehaus.commons.compiler",
      "ch.qos.logback.core.joran.conditional"                            -> "org.codehaus.janino",
      "org.postgresql.osgi"                                              -> "org.osgi",
      "org.postgresql.sspi"                                              -> "com.sun.jna",
      "org.postgresql.sspi"                                              -> "waffle.windows.auth",
      "org.flywaydb.core"                                                -> "android",
      "org.flywaydb.core.internal.scanner.android"                       -> "dalvik.system",
      "org.flywaydb.core.internal.scanner.classpath"                     -> "org.osgi.framework",
      "org.flywaydb.core.internal.scanner.classpath.jboss"               -> "org.jboss.vfs",
      "org.flywaydb.core.internal.resource.gcs"                          -> "com.google.cloud",
      "org.flywaydb.core.internal.resource.gcs"                          -> "com.google.cloud.storage",
      "org.flywaydb.core.internal.resource.s3"                           -> "software.amazon.awssdk.awscore.exception",
      "org.flywaydb.core.internal.resource.s3"                           -> "software.amazon.awssdk.core",
      "org.flywaydb.core.internal.resource.s3"                           -> "software.amazon.awssdk.services.s3",
      "org.flywaydb.core.internal.resource.s3"                           -> "software.amazon.awssdk.services.s3.model",
      "org.flywaydb.core.internal.scanner.cloud.gcs"                     -> "com.google.api.gax.paging",
      "org.flywaydb.core.internal.scanner.cloud.gcs"                     -> "com.google.cloud",
      "org.flywaydb.core.internal.scanner.cloud.gcs"                     -> "com.google.cloud.storage",
      "org.flywaydb.core.internal.scanner.cloud.s3"                      -> "software.amazon.awssdk.core.exception",
      "org.flywaydb.core.internal.scanner.cloud.s3"                      -> "software.amazon.awssdk.services.s3",
      "org.flywaydb.core.internal.scanner.cloud.s3"                      -> "software.amazon.awssdk.services.s3.model",
      "com.zaxxer.hikari"                                                -> "com.codahale.metrics.health",
      "com.zaxxer.hikari.hibernate"                                      -> "org.hibernate",
      "com.zaxxer.hikari.metrics.dropwizard"                             -> "com.codahale.metrics",
      "com.zaxxer.hikari.metrics.micrometer"                             -> "io.micrometer.core.instrument",
      "com.zaxxer.hikari.metrics.prometheus"                             -> "io.prometheus.client",
      "com.zaxxer.hikari.pool"                                           -> "com.codahale.metrics",
      "com.zaxxer.hikari.pool"                                           -> "io.micrometer.core.instrument",
      "com.zaxxer.hikari.util"                                           -> "javassist",
      "doobie.postgres"                                                  -> "org.postgis",
      "org.bouncycastle.pqc.crypto.qtesla"                               -> "junit.framework",
      "zio.interop"                                                      -> "cats.mtl",
      "zio.test.interop"                                                 -> "zio.test",
      "caliban"                                                          -> "play.api.libs",
      "okhttp3"                                                          -> "okhttp3",
      "okhttp3"                                                          -> "javax.annotation",
      "okhttp3.internal.io"                                              -> "okhttp3.internal.io",
      "okhttp3.internal.http2"                                           -> "okhttp3.internal.http2",
      "okhttp3.internal.platform"                                        -> "org.openjsse.javax.net.ssl",
      "okhttp3.internal.platform"                                        -> "org.openjsse.net.ssl",
      "okhttp3.internal.platform"                                        -> "android",
      "okhttp3.internal.platform"                                        -> "org.conscrypt",
      "okhttp3.internal.platform"                                        -> "org.bouncycastle.jsse",
      "okhttp3.internal.platform"                                        -> "org.bouncycastle.jsse.provider",
      "okhttp3.internal.platform.android"                                -> "org.bouncycastle.jsse",
      "org.apache.commons.logging.impl"                                  -> "javax.servlet",
      "org.apache.commons.logging.impl"                                  -> "org.apache.avalon.framework.logger",
      "org.apache.commons.logging.impl"                                  -> "org.apache.log",
      "org.apache.thrift.server"                                         -> "javax.servlet",
      "okio"                                                             -> "javax.annotation",
      "org.jline.builtins"                                               -> "org.mozilla.universalchardet",
      "org.jline.builtins.ssh"                                           -> "org.apache.sshd",
      "org.jline.style"                                                  -> "javax.annotation",
      "org.jline.terminal.impl.jansi"                                    -> "org.fusesource.jansi",
      "tofu.logging.zlogs"                                               -> "izumi.reflect",
      "org.apache.thrift.transport"                                      -> "org.apache.http",
      "org.apache.thrift.transport"                                      -> "org.apache.http.client",
      "org.apache.thrift.transport"                                      -> "org.apache.http.client.methods",
      "org.apache.thrift.transport"                                      -> "org.apache.http.entity",
      "org.apache.thrift.transport"                                      -> "org.apache.http.params",
      "org.flywaydb.core.api.configuration"                              -> "software.amazon.awssdk.services.s3",
      "org.flywaydb.core.internal.logging.log4j2"                        -> "org.apache.logging.log4j",
      "caliban"                                                          -> "zio.json",
      "caliban.interop.zio"                                              -> "zio.json",
      "caliban.interop.zio"                                              -> "zio.json.internal",
      "org.flywaydb.core.internal.database.oracle"                       -> "oracle.jdbc",
      "org.apache.catalina.core"                                         -> "javax.ejb",
      "org.apache.catalina.core"                                         -> "javax.persistence",
      "org.apache.catalina.core"                                         -> "javax.xml.ws",
      "org.apache.tomcat.util.descriptor.tld"                            -> "javax.servlet.jsp.tagext",
      "io.prometheus.client.exemplars.tracer.otel"                       -> "io.opentelemetry.api.trace",
      "io.prometheus.client.exemplars.tracer.otel_agent"                 -> "io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace",
      "org.apache.kafka.common.message"                                  -> "com.fasterxml.jackson.databind",
      "org.apache.kafka.common.message"                                  -> "com.fasterxml.jackson.databind.node",
      "org.apache.kafka.common.protocol"                                 -> "com.fasterxml.jackson.databind",
      "org.apache.kafka.common.protocol"                                 -> "com.fasterxml.jackson.databind.node",
      "org.apache.kafka.common.security.oauthbearer.internals.unsecured" -> "com.fasterxml.jackson.databind",
      "org.apache.kafka.common.security.oauthbearer.internals.unsecured" -> "com.fasterxml.jackson.databind.node",
      "org.apache.naming.factory"                                        -> "javax.mail",
      "org.apache.naming.factory"                                        -> "javax.mail.internet",
      "org.xerial.snappy"                                                -> "org.osgi.framework"
    ),
    addCompilerPlugin("org.typelevel" % "kind-projector"     % kindProjectorVersion cross CrossVersion.patch),
    addCompilerPlugin("com.olegpy"   %% "better-monadic-for" % bm4Version),
    buildInfoKeys := Seq(name, version),
    buildInfoPackage := "io.conduktor"
  )
